<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Using construct libraries on AWS Cloud Development Kit (AWS CDK) Workshop</title><link>https://jaws-ug-cdk.github.io/aws-cdk-intro-workshop/50-java/50-table-viewer.html</link><description>Recent content in Using construct libraries on AWS Cloud Development Kit (AWS CDK) Workshop</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://jaws-ug-cdk.github.io/aws-cdk-intro-workshop/50-java/50-table-viewer/index.xml" rel="self" type="application/rss+xml"/><item><title>Learning about the Table Viewer construct</title><link>https://jaws-ug-cdk.github.io/aws-cdk-intro-workshop/50-java/50-table-viewer/100-discovery.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaws-ug-cdk.github.io/aws-cdk-intro-workshop/50-java/50-table-viewer/100-discovery.html</guid><description>Reading documentation Browse to the cdk-dynamo-table-viewer page on Github if you want to read the module documentation.
As mentioned in the README page of this library, it is not intended for production use. Namely because it will expose contents from your DynamoDB table to anyone without authentication.</description></item><item><title>Installing the library</title><link>https://jaws-ug-cdk.github.io/aws-cdk-intro-workshop/50-java/50-table-viewer/200-install.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaws-ug-cdk.github.io/aws-cdk-intro-workshop/50-java/50-table-viewer/200-install.html</guid><description>Add Artifact Before you can use the table viewer in your application, you&amp;rsquo;ll need to add the artifact to your pom.xml file:
... &amp;lt;dependencies&amp;gt; &amp;lt;!-- AWS Cloud Development Kit --&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;software.amazon.awscdk&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;aws-cdk-lib&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${cdk.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;!-- Additional Construct Libraries --&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;io.github.cdklabs&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;cdk-dynamo-table-view&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;0.2.0&amp;lt;/version&amp;gt; &amp;lt;exclusions&amp;gt; &amp;lt;exclusion&amp;gt; &amp;lt;groupId&amp;gt; software.amazon.jsii&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;jsii-runtime&amp;lt;/artifactId&amp;gt; &amp;lt;/exclusion&amp;gt; &amp;lt;/exclusions&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;/dependencies&amp;gt; ... Now we are ready to add a viewer to our app.</description></item><item><title>Add the table viewer to your app</title><link>https://jaws-ug-cdk.github.io/aws-cdk-intro-workshop/50-java/50-table-viewer/300-add.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaws-ug-cdk.github.io/aws-cdk-intro-workshop/50-java/50-table-viewer/300-add.html</guid><description>Add a table viewer to your stack Add the following hightlighted lines to ~/CdkWorkshopStack.java to add a TableViewer construct to your stack:
package com.myorg; import io.github.cdklabs.dynamotableviewer.TableViewer; import software.constructs.Construct; import software.amazon.awscdk.Stack; import software.amazon.awscdk.StackProps; import software.amazon.awscdk.services.apigateway.LambdaRestApi; import software.amazon.awscdk.services.lambda.Code; import software.amazon.awscdk.services.lambda.Function; import software.amazon.awscdk.services.lambda.Runtime; public class CdkWorkshopStack extends Stack { public CdkWorkshopStack(final Construct parent, final String id) { this(parent, id, null); } public CdkWorkshopStack(final Construct parent, final String id, final StackProps props) { super(parent, id, props); // Defines a new lambda resource final Function hello = Function.</description></item><item><title>Deploying our app</title><link>https://jaws-ug-cdk.github.io/aws-cdk-intro-workshop/50-java/50-table-viewer/400-deploy.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaws-ug-cdk.github.io/aws-cdk-intro-workshop/50-java/50-table-viewer/400-deploy.html</guid><description>cdk diff Before we deploy, let&amp;rsquo;s take a look at what will happen when we deploy our app (this is just the Resources section of the output):
$ mvn package ... $ cdk diff Resources [+] AWS::IAM::Role ViewHitCounter/Rendered/ServiceRole ViewHitCounterRenderedServiceRole254DB4EA [+] AWS::IAM::Policy ViewHitCounter/Rendered/ServiceRole/DefaultPolicy ViewHitCounterRenderedServiceRoleDefaultPolicy9ADB8C83 [+] AWS::Lambda::Function ViewHitCounter/Rendered ViewHitCounterRendered9C783E45 [+] AWS::Lambda::Permission ViewHitCounter/Rendered/ApiPermission.ANY.. ViewHitCounterRenderedApiPermissionANY72263B1A [+] AWS::Lambda::Permission ViewHitCounter/Rendered/ApiPermission.Test.ANY.. ViewHitCounterRenderedApiPermissionTestANYA4794B81 [+] AWS::Lambda::Permission ViewHitCounter/Rendered/ApiPermission.ANY..{proxy+} ViewHitCounterRenderedApiPermissionANYproxy42B9E676 [+] AWS::Lambda::Permission ViewHitCounter/Rendered/ApiPermission.Test.ANY..{proxy+} ViewHitCounterRenderedApiPermissionTestANYproxy104CA88E [+] AWS::ApiGateway::RestApi ViewHitCounter/ViewerEndpoint ViewHitCounterViewerEndpoint5A0EF326 [+] AWS::ApiGateway::Deployment ViewHitCounter/ViewerEndpoint/Deployment ViewHitCounterViewerEndpointDeployment1CE7C5768689ca8f54dfa4f161d3df0ebffcdcff [+] AWS::ApiGateway::Stage ViewHitCounter/ViewerEndpoint/DeploymentStage.</description></item><item><title>Extra credit</title><link>https://jaws-ug-cdk.github.io/aws-cdk-intro-workshop/50-java/50-table-viewer/500-extra-credit.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaws-ug-cdk.github.io/aws-cdk-intro-workshop/50-java/50-table-viewer/500-extra-credit.html</guid><description>Sort hits by descending order You&amp;rsquo;ll notice that the hits in the table are not sorted. Figure out how to configure the table viewer to sort the table by &amp;ldquo;hits&amp;rdquo; in descending order (top path is first).</description></item></channel></rss>