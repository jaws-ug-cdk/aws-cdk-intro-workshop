<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Using construct libraries on AWS Cloud Development Kit (AWS CDK) Workshop</title><link>https://jaws-ug-cdk.github.io/aws-cdk-intro-workshop/30-python/50-table-viewer.html</link><description>Recent content in Using construct libraries on AWS Cloud Development Kit (AWS CDK) Workshop</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://jaws-ug-cdk.github.io/aws-cdk-intro-workshop/30-python/50-table-viewer/index.xml" rel="self" type="application/rss+xml"/><item><title>Learning about the Table Viewer construct</title><link>https://jaws-ug-cdk.github.io/aws-cdk-intro-workshop/30-python/50-table-viewer/100-discovery.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaws-ug-cdk.github.io/aws-cdk-intro-workshop/30-python/50-table-viewer/100-discovery.html</guid><description>Reading documentation Browse to the cdk-dynamo-table-view page on pypi.org and read the module documentation.
There is some documentation about how to use the table viewer in the README but it is all focused on TypeScript rather than Python. So, we will walk through the process of using a third-party construct in Python.
As mentioned in the README page of this library, it is not intended for production use. Namely because it will expose contents from your DynamoDB table to anyone without authentication.</description></item><item><title>Installing the library</title><link>https://jaws-ug-cdk.github.io/aws-cdk-intro-workshop/30-python/50-table-viewer/200-install.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaws-ug-cdk.github.io/aws-cdk-intro-workshop/30-python/50-table-viewer/200-install.html</guid><description>pip install Before you can use the table viewer in your application, you&amp;rsquo;ll need to install the python module:
pip install cdk-dynamo-table-view==0.2.0 The last two lines of the output (there&amp;rsquo;s a lot of it) should look like this:
Installing collected packages: cdk-dynamo-table-view Successfully installed cdk-dynamo-table-view-0.2.0 Now we are ready to add a viewer to our app.</description></item><item><title>Add the table viewer to your app</title><link>https://jaws-ug-cdk.github.io/aws-cdk-intro-workshop/30-python/50-table-viewer/300-add.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaws-ug-cdk.github.io/aws-cdk-intro-workshop/30-python/50-table-viewer/300-add.html</guid><description>Add a table viewer to your stack Add the following highlighted lines to cdk_workshop_stack.py to add a TableViewer construct to your stack:
from constructs import Construct from aws_cdk import ( Stack, aws_lambda as _lambda, aws_apigateway as apigw, ) from cdk_dynamo_table_view import TableViewer from .hitcounter import HitCounter class CdkWorkshopStack(Stack): def __init__(self, scope: Construct, id: str, **kwargs) -&amp;gt; None: super().__init__(scope, id, **kwargs) # Defines an AWS Lambda resource hello = _lambda.Function( self, &amp;#39;HelloHandler&amp;#39;, runtime=_lambda.</description></item><item><title>Exposing our hit counter table</title><link>https://jaws-ug-cdk.github.io/aws-cdk-intro-workshop/30-python/50-table-viewer/400-expose-table.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaws-ug-cdk.github.io/aws-cdk-intro-workshop/30-python/50-table-viewer/400-expose-table.html</guid><description>Add a table property to our hit counter Edit hitcounter.py and modify it as such table is exposed as a public property.
from constructs import Construct from aws_cdk import ( aws_lambda as _lambda, aws_dynamodb as ddb, ) class HitCounter(Construct): @property def handler(self): return self._handler @property def table(self): return self._table def __init__(self, scope: Construct, id: str, downstream: _lambda.IFunction, **kwargs): super().__init__(scope, id, **kwargs) self._table = ddb.Table( self, &amp;#39;Hits&amp;#39;, partition_key={&amp;#39;name&amp;#39;: &amp;#39;path&amp;#39;, &amp;#39;type&amp;#39;: ddb.AttributeType.STRING} ) self.</description></item><item><title>Deploying our app</title><link>https://jaws-ug-cdk.github.io/aws-cdk-intro-workshop/30-python/50-table-viewer/500-deploy.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaws-ug-cdk.github.io/aws-cdk-intro-workshop/30-python/50-table-viewer/500-deploy.html</guid><description>cdk diff Before we deploy, let&amp;rsquo;s take a look at what will happen when we deploy our app (this is just the Resources section of the output):
$ cdk diff Resources [+] AWS::IAM::Role ViewHitCounter/Rendered/ServiceRole ViewHitCounterRenderedServiceRole254DB4EA [+] AWS::IAM::Policy ViewHitCounter/Rendered/ServiceRole/DefaultPolicy ViewHitCounterRenderedServiceRoleDefaultPolicy9ADB8C83 [+] AWS::Lambda::Function ViewHitCounter/Rendered ViewHitCounterRendered9C783E45 [+] AWS::Lambda::Permission ViewHitCounter/Rendered/ApiPermission.ANY.. ViewHitCounterRenderedApiPermissionANY72263B1A [+] AWS::Lambda::Permission ViewHitCounter/Rendered/ApiPermission.Test.ANY.. ViewHitCounterRenderedApiPermissionTestANYA4794B81 [+] AWS::Lambda::Permission ViewHitCounter/Rendered/ApiPermission.ANY..{proxy+} ViewHitCounterRenderedApiPermissionANYproxy42B9E676 [+] AWS::Lambda::Permission ViewHitCounter/Rendered/ApiPermission.Test.ANY..{proxy+} ViewHitCounterRenderedApiPermissionTestANYproxy104CA88E [+] AWS::ApiGateway::RestApi ViewHitCounter/ViewerEndpoint ViewHitCounterViewerEndpoint5A0EF326 [+] AWS::ApiGateway::Deployment ViewHitCounter/ViewerEndpoint/Deployment ViewHitCounterViewerEndpointDeployment1CE7C5761d44312e8424c23ba090a70e0962c36f [+] AWS::ApiGateway::Stage ViewHitCounter/ViewerEndpoint/DeploymentStage.prod ViewHitCounterViewerEndpointDeploymentStageprodF3901FC7 [+] AWS::IAM::Role ViewHitCounter/ViewerEndpoint/CloudWatchRole ViewHitCounterViewerEndpointCloudWatchRole87B94D6A [+] AWS::ApiGateway::Account ViewHitCounter/ViewerEndpoint/Account ViewHitCounterViewerEndpointAccount0B75E76A [+] AWS::ApiGateway::Resource ViewHitCounter/ViewerEndpoint/Default/{proxy+} ViewHitCounterViewerEndpointproxy2F4C239F [+] AWS::ApiGateway::Method ViewHitCounter/ViewerEndpoint/Default/{proxy+}/ANY ViewHitCounterViewerEndpointproxyANYFF4B8F5B [+] AWS::ApiGateway::Method ViewHitCounter/ViewerEndpoint/Default/ANY ViewHitCounterViewerEndpointANY66F2285B You&amp;rsquo;ll notice that the table viewer adds another API Gateway endpoint, a Lambda function, permissions, outputs, all sorts of goodies.</description></item><item><title>Extra credit</title><link>https://jaws-ug-cdk.github.io/aws-cdk-intro-workshop/30-python/50-table-viewer/600-extra-credit.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaws-ug-cdk.github.io/aws-cdk-intro-workshop/30-python/50-table-viewer/600-extra-credit.html</guid><description>Sort hits by descending order You&amp;rsquo;ll notice that the hits in the table are not sorted. Figure out how to configure the table viewer to sort the table by &amp;ldquo;hits&amp;rdquo; in descending order (top path is first).</description></item></channel></rss>