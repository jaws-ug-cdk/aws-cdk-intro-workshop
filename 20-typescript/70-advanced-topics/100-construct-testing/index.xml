<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Testing Constructs on AWS Cloud Development Kit (AWS CDK) Workshop</title><link>https://cdkworkshop.com/20-typescript/70-advanced-topics/100-construct-testing.html</link><description>Recent content in Testing Constructs on AWS Cloud Development Kit (AWS CDK) Workshop</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://cdkworkshop.com/20-typescript/70-advanced-topics/100-construct-testing/index.xml" rel="self" type="application/rss+xml"/><item><title>Assertion Tests</title><link>https://cdkworkshop.com/20-typescript/70-advanced-topics/100-construct-testing/1000-assertion-test.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cdkworkshop.com/20-typescript/70-advanced-topics/100-construct-testing/1000-assertion-test.html</guid><description>Fine-Grained Assertion Tests Create a test for the DynamoDB table This section assumes that you have created the hit counter construct Our HitCounter construct creates a simple DynamoDB table. Lets create a test that validates that the table is getting created.
If cdk init created a test directory for you, then you should have a cdk-workshop.test.ts file. Delete this file.
If you do not already have a test directory (usually created automatically when you run cdk init), then create a test directory at the same level as bin and lib and then create a file called hitcounter.</description></item><item><title>Validation Tests</title><link>https://cdkworkshop.com/20-typescript/70-advanced-topics/100-construct-testing/2000-validation-tests.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cdkworkshop.com/20-typescript/70-advanced-topics/100-construct-testing/2000-validation-tests.html</guid><description>Validation Tests Sometimes we want the inputs to be configurable, but we also want to put constraints on those inputs or validate that the input is valid.
Suppose for the HitCounter construct we want to allow the user to specify the readCapacity on the DynamoDB table, but we also want to ensure the value is within a reasonable range. We can write a test to make sure that the validation logic works: pass in invalid values and see what happens.</description></item></channel></rss>