<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>新しいプロジェクト on AWS Cloud Development Kit (AWS CDK) Workshop</title><link>https://jaws-ug-cdk.github.io/aws-cdk-intro-workshop/20-typescript/20-create-project.html</link><description>Recent content in 新しいプロジェクト on AWS Cloud Development Kit (AWS CDK) Workshop</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://jaws-ug-cdk.github.io/aws-cdk-intro-workshop/20-typescript/20-create-project/index.xml" rel="self" type="application/rss+xml"/><item><title>cdk init</title><link>https://jaws-ug-cdk.github.io/aws-cdk-intro-workshop/20-typescript/20-create-project/100-cdk-init.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaws-ug-cdk.github.io/aws-cdk-intro-workshop/20-typescript/20-create-project/100-cdk-init.html</guid><description>プロジェクトディレクトリを作成する 空のディレクトリを作成します。
mkdir cdk-workshop &amp;amp;&amp;amp; cd cdk-workshop cdk init cdk initコマンドを実行して、TypeScript製の新しいCDKプロジェクトを作成します。
cdk init sample-app --language typescript 出力は次のようになります。
# Welcome to your CDK TypeScript project You should explore the contents of this project. It demonstrates a CDK app with an instance of a stack (`CdkWorkshopStack`) which contains an Amazon SQS queue that is subscribed to an Amazon SNS topic. The `cdk.json` file tells the CDK Toolkit how to execute your app. ## Useful commands * `npm run build` compile typescript to js * `npm run watch` watch for changes and compile * `npm run test` perform the jest unit tests * `cdk deploy` deploy this stack to your default AWS account/region * `cdk diff` compare deployed stack with current state * `cdk synth` emits the synthesized CloudFormation template Initializing a new git repository.</description></item><item><title>プロジェクト構造</title><link>https://jaws-ug-cdk.github.io/aws-cdk-intro-workshop/20-typescript/20-create-project/300-structure.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaws-ug-cdk.github.io/aws-cdk-intro-workshop/20-typescript/20-create-project/300-structure.html</guid><description>IDEを開く 使い慣れたIDEでプロジェクトを開いてみましょう。
Cloud9 を使用する場合は、すでにIDEの画面で操作を行っています。
VSCodeを使用する場合は、 code . コマンドをプロジェクトディレクトリ内で実行すれば簡単に開けます。
プロジェクトディレクトリを確認する 以下のようなディレクトリ構成が確認できます。
lib/cdk-workshop-stack.ts CDKアプリケーションのメインスタックが定義されます。 今回のワークショップではこのファイルを主に修正します。 bin/cdk-workshop.ts CDKアプリケーションのエントリポイントです。 lib/cdk-workshop-stack.ts で定義されたスタックをロードします。 package.json npmモジュールのマニフェストです。 アプリの名前、バージョン、依存関係、&amp;ldquo;watch&amp;rdquo; や &amp;ldquo;build&amp;rdquo; 用のビルドスクリプトなどの情報が含まれます（package-lock.json はnpmによって管理されます） cdk.json アプリの実行方法をツールキットに指示させるためのファイルです。 今回の場合は、 &amp;quot;npx ts-node bin/cdk-workshop.ts&amp;quot; です。 tsconfig.json プロジェクトの TypeScript設定 です。 .gitignore, .npmignore Gitとnpm用のファイルです。 ソースコードの管理に含める/除外するファイルと、パッケージマネージャーへの公開用設定が含まれています。 node_modules npmによって管理され、プロジェクトのすべての依存関係が含まれます。 アプリのエントリポイント bin/cdk-workshop.tsを簡単に見てみましょう。
#!/usr/bin/env node import * as cdk from &amp;#39;aws-cdk-lib&amp;#39;; import { CdkWorkshopStack } from &amp;#39;../lib/cdk-workshop-stack&amp;#39;; const app = new cdk.App(); new CdkWorkshopStack(app, &amp;#39;CdkWorkshopStack&amp;#39;); このコードは、lib/cdk-workshop-stack.tsファイルを開き、 CdkWorkshopStack クラス をロードして初期化するものです。 一度読んだら、もうこのファイルを見る必要はありません。</description></item><item><title>cdk synth</title><link>https://jaws-ug-cdk.github.io/aws-cdk-intro-workshop/20-typescript/20-create-project/400-synth.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaws-ug-cdk.github.io/aws-cdk-intro-workshop/20-typescript/20-create-project/400-synth.html</guid><description>アプリからテンプレートを生成する AWS CDKアプリ自体はコードを使用したインフラストラクチャの 定義 にすぎません。 CDKアプリが実行されると、アプリケーションで定義された各スタックのAWS CloudFormationテンプレートが生成（CDKの用語では &amp;quot;synthesize&amp;quot; ）されます。
CDKアプリを生成するには、 cdk synth コマンドを実行してください。 サンプルアプリから生成されたCloudFormationテンプレートを確認してみましょう。
CDK CLI はcdk.jsonファイルが配置されているプロジェクトのルートディレクトリで実行する必要があります。 ディレクトリを移動している場合はプロジェクトのルートディレクトリに戻ってからCDKコマンドを実行してください。
cdk synth 上記コマンドを実行すると、次のCloudFormationテンプレートを出力します。
Resources: CdkWorkshopQueue50D9D426: Type: AWS::SQS::Queue Properties: VisibilityTimeout: 300 UpdateReplacePolicy: Delete DeletionPolicy: Delete Metadata: aws:cdk:path: CdkWorkshopStack/CdkWorkshopQueue/Resource CdkWorkshopQueuePolicyAF2494A5: Type: AWS::SQS::QueuePolicy Properties: PolicyDocument: Statement: - Action: sqs:SendMessage Condition: ArnEquals: aws:SourceArn: Ref: CdkWorkshopTopicD368A42F Effect: Allow Principal: Service: sns.amazonaws.com Resource: Fn::GetAtt: - CdkWorkshopQueue50D9D426 - Arn Version: &amp;#34;2012-10-17&amp;#34; Queues: - Ref: CdkWorkshopQueue50D9D426 Metadata: aws:cdk:path: CdkWorkshopStack/CdkWorkshopQueue/Policy/Resource CdkWorkshopQueueCdkWorkshopStackCdkWorkshopTopicD7BE96438B5AD106: Type: AWS::SNS::Subscription Properties: Protocol: sqs TopicArn: Ref: CdkWorkshopTopicD368A42F Endpoint: Fn::GetAtt: - CdkWorkshopQueue50D9D426 - Arn Metadata: aws:cdk:path: CdkWorkshopStack/CdkWorkshopQueue/CdkWorkshopStackCdkWorkshopTopicD7BE9643/Resource CdkWorkshopTopicD368A42F: Type: AWS::SNS::Topic Metadata: aws:cdk:path: CdkWorkshopStack/CdkWorkshopTopic/Resource CDKMetadata: Type: AWS::CDK::Metadata Properties: Analytics: v2:deflate64:H4sIAAAAAAAA/1WNQQrCMBBFz9J9OhoFxXUvoK17aZMI09akZhJFQu5uk4DgZv7/jwezg/0JeNW/qRZyqmccIHSuFxNb0S3QkyBcvPKKNXddSr5nM6P4/GCZkZFe/c4PJCwuDo1Oxt++mgVFornEmGqryHgr8o/GaInJjEwbqWCkzYsfgB9hW42EWFuvHT4UtCW/VHqIZsEAAAA= Metadata: aws:cdk:path: CdkWorkshopStack/CDKMetadata/Default Condition: CDKMetadataAvailable Conditions: CDKMetadataAvailable: Fn::Or: - Fn::Or: - Fn::Equals: - Ref: AWS::Region - af-south-1 - Fn::Equals: - Ref: AWS::Region - ap-east-1 - Fn::Equals: - Ref: AWS::Region - ap-northeast-1 - Fn::Equals: - Ref: AWS::Region - ap-northeast-2 - Fn::Equals: - Ref: AWS::Region - ap-south-1 - Fn::Equals: - Ref: AWS::Region - ap-southeast-1 - Fn::Equals: - Ref: AWS::Region - ap-southeast-2 - Fn::Equals: - Ref: AWS::Region - ca-central-1 - Fn::Equals: - Ref: AWS::Region - cn-north-1 - Fn::Equals: - Ref: AWS::Region - cn-northwest-1 - Fn::Or: - Fn::Equals: - Ref: AWS::Region - eu-central-1 - Fn::Equals: - Ref: AWS::Region - eu-north-1 - Fn::Equals: - Ref: AWS::Region - eu-south-1 - Fn::Equals: - Ref: AWS::Region - eu-west-1 - Fn::Equals: - Ref: AWS::Region - eu-west-2 - Fn::Equals: - Ref: AWS::Region - eu-west-3 - Fn::Equals: - Ref: AWS::Region - me-south-1 - Fn::Equals: - Ref: AWS::Region - sa-east-1 - Fn::Equals: - Ref: AWS::Region - us-east-1 - Fn::Equals: - Ref: AWS::Region - us-east-2 - Fn::Or: - Fn::Equals: - Ref: AWS::Region - us-west-1 - Fn::Equals: - Ref: AWS::Region - us-west-2 Parameters: BootstrapVersion: Type: AWS::SSM::Parameter::Value&amp;lt;String&amp;gt; Default: /cdk-bootstrap/hnb659fds/version Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store.</description></item><item><title>cdk deploy</title><link>https://jaws-ug-cdk.github.io/aws-cdk-intro-workshop/20-typescript/20-create-project/500-deploy.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaws-ug-cdk.github.io/aws-cdk-intro-workshop/20-typescript/20-create-project/500-deploy.html</guid><description>CloudFormationテンプレートが作成されました。次は何を行うでしょうか？ AWSへのデプロイをしましょう！
環境の初期構築 AWS CDKアプリを環境（アカウント/リージョン）に初めてデプロイするときは、Bootstrapスタックを構築する必要があります。 このスタックには、ツールキットの操作に必要なリソースが含まれています。 たとえば、スタックにはデプロイプロセスで使われるCloudformationテンプレートとアセットを保存するために使用されるS3バケットが含まれます。
cdk bootstrap コマンドを実行すれば、bootstrapスタックがAWS環境にデプロイされます。
cdk bootstrap 実行すると以下のように表示されます。
⏳ Bootstrapping environment aws://999999999999/us-east-1... ... アクセス拒否エラーとなるときはAWS CLIのクレデンシャル情報が正しく設定されているか、 現在のプロファイルが CloudFormationのcloudformation:CreateChangeSetを実行する権限を持っているか確認してください。
デプロイしましょう！ cdk deploy コマンドを使用することで、CDKアプリをデプロイできます。
cdk deploy 次のような警告が表示されるはずです。
This deployment will make potentially sensitive changes according to your current security approval level (--require-approval broadening). Please confirm you intend to make the following modifications: IAM Statement Changes ┌───┬─────────────────────────┬────────┬─────────────────┬───────────────────────────┬─────────────────────────────────────────────────────────┐ │ │ Resource │ Effect │ Action │ Principal │ Condition │ ├───┼─────────────────────────┼────────┼─────────────────┼───────────────────────────┼─────────────────────────────────────────────────────────┤ │ + │ ${CdkWorkshopQueue.</description></item></channel></rss>